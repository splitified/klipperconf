# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin								[probe] section
## Fine tune E steps					[extruder] section

[include btt_octopus_pin_aliases.cfg]
[include lcd_tweak.cfg] 
[include stealthburner_leds.cfg]

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
  206, 100.000, 60

[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_10003E00085053424E363420-if00
#restart_method: command
##--------------------------------------------------------------------

[input_shaper]
shaper_freq_x: 50
shaper_freq_y: 45.2
shaper_type: mzv

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 10000    			#Max 4000
max_accel_to_decel: 10000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: !PG6
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
#position_endstop: 250
#position_max: 250

#	Uncomment for 300mm build
position_endstop: 300
position_max: 300

##	Uncomment for 350mm build
#position_endstop: 350
#position_max: 350

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9

position_min: 0
position_endstop: 305
position_max: 307
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: True
run_current: 0.8
hold_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR2_1
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16
endstop_pin: !PG10
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 3.7

position_max: 290
position_min: -2.6
homing_speed: 8
second_homing_speed: 3
homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: true
run_current: 0.8
hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right on MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right on MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 16

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: true
run_current: 0.8
hold_current: 0.80
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR6
[extruder]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 21.98859051802	#Bondtech 5mm Drive Gears
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:17				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##	Validate the following thermistor type to make sure it is correct
sensor_type: Generic 3950
sensor_pin: PF4
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.0335
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

max_extrude_only_distance: 100
#   Maximum length (in mm of raw filament) that a retraction or
#   extrude-only move may have. If a retraction or extrude-only move
#   requests a distance greater than this value it will cause an error
#   to be returned. The default is 50mm.

##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: PE1
interpolate: false
run_current: 0.5
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling

# Select the probe port by type:
## For the PROBE port; use this with the original OMRON sensor.
#pin: ~!PB7
# For the spare endstop port; use this with the Fotek PL-05N (or generic) inductive probe
pin: ^PG15
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
# pin: ^PC5

#--------------------------------------------------------------------

# x_offset: 0
# y_offset: 21.00
# z_offset: 6.42

#z_offset = 6.42
x_offset: 0 
y_offset: 19.75

speed: 5
samples:5
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 5

#####################################################################
# 	Fan Control
#####################################################################

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: PA8
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10
cycle_time: 0.07

[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[heater_fan controller_fan_1]
##	Controller fan - CNC_FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0
fan_speed: 0.5

[fan_generic controller_fan_2]
pin: PD14
max_power: 1.0
shutdown_speed: 1.0


#	Always on Fan for electronics cooling
[delayed_gcode set_ctrl_fan_on]
initial_duration: 25
gcode:
  SET_FAN_SPEED FAN=controller_fan_2 SPEED=0.3

[fan_generic exhaust_fan]
#	Exhaust fan - CNC_FAN3
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0

[filament_switch_sensor RunoutSensor]
switch_pin: !PG12 # Pin ESTOP4 for Octopus mcu

# Without M600 macro (uncomment the line below and comment the two lines in the "With Filament change M600 macro"
# pause_on_runout: true

# With M600 Filament change macro
pause_on_runout: false
runout_gcode: M600
insert_gcode:
    M117

[gcode_macro M600]
variable_park_x: 220
variable_park_y: 10
variable_z_lift: 20
variable_velocity: 60
variable_retract: 1
gcode:
    SAVE_GCODE_STATE NAME=STATE_M600
    
    # remembers the position
    # fluidd annoyingly redefines this macro to retract and park the toolhead at the rear
    PAUSE  
    
    # safe park coords
    {% set th = printer.toolhead %}
    {% set park_x = [params.X|default(park_x)|int, th.axis_maximum.x-2]|min %}
    {% set park_y = [params.Y|default(park_y)|int, th.axis_maximum.y-10]|min %}
    {% set park_z = [th.position.z + params.Z_LIFT|default(z_lift)|int, th.axis_maximum.z]|min %}
    {% set park_feedrate = params.VELOCITY|default(velocity)|int * 60 %}
    
    # Minimum extrusion temp
    {% set minTemp = printer['configfile'].config["extruder"]["min_extrude_temp"]|int %}
    {% if printer.extruder.temperature < minTemp %}  
      M117 Wait for temp...
      M109 S{minTemp+30}
      M117
    {% endif %}

    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}

    # retract at 50mm/sec
    G91
    G1 E-{retract} F3000
    
    # park toolhead
    G90
    G0 X{park_x} Y{park_y} Z{park_z} F{park_feedrate}
    
    # unload 60mm of filament
    G91
    G1 E-50 F3600
    G1 E-10 F3600

    M117 Refill Please
    
    RESTORE_GCODE_STATE NAME=STATE_M600

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
#pin: PA3
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

# [safe_z_home]
# ##	XY Location of the Z Endstop Switch
# ##	Update -10,-10 to the XY coordinates of your endstop pin 
# ##	(such as 157,305) after going through Z Endstop Pin
# ##	Location Definition step.
# home_xy_position:206,300
# speed:100
# z_hop:10

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 250mm Build
##	Uncomment for 250mm build
#gantry_corners:
#	-60,-10
#	310, 320
##	Probe points
#points:
#	50,25
#	50,175
#	200,175
#	200,25
	
#	Gantry Corners for 300mm Build
#	Uncomment for 300mm build
gantry_corners:
	-60,-10
	360,370
#	Probe points
points:
	50,25
	50,225
	250,225
	250,25

##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
#gantry_corners:
#	-60,-10
#	410,420
##	Probe points
#points:
#	50,25
#	50,275
#	300,275
#	300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 3
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Thermals
#####################################################################

[temperature_sensor raspberry_pi]
## Pi temp
sensor_type: temperature_host
max_temp: 100

[temperature_sensor octopus]
## Octopus temp
sensor_type: temperature_mcu
max_temp: 100

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[display]
#	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.0
initial_GREEN: 0.94
initial_BLUE: 1.0
color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
# [delayed_gcode setdisplayneopixel]
# initial_duration: 1
# gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------

#####################################################################
# 	BED MESH
#####################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
probe_count: 5,3
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

#####################################################################
# 	Display Menu
#####################################################################

[include menu.cfg]

#####################################################################
# 	Klicky Probe
#####################################################################

[include klicky-probe.cfg]

#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_LEVEL

[delayed_gcode EXHAUST_SHUT_OFF]
gcode:
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0     ; turn off fan
    status_ready
    M117

[delayed_gcode CLEAR_SCREEN]
gcode:
  M117

[gcode_macro EXHAUST]
gcode:
    M117 Cooling
    SET_FAN_SPEED FAN=exhaust_fan SPEED=1
    UPDATE_DELAYED_GCODE ID=EXHAUST_SHUT_OFF DURATION=300

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X300 Y300 F15000           ; park nozzle at rear
    BED_MESH_CLEAR
    EXHAUST
    
        
## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

[include fluidd.cfg]
[include z_calibration.cfg]

[gcode_macro PRINT_START]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.EXTRUDER|int %}
    # {% set chambertemp = params.CHAMBER|default(0)|int %}

    M117 Heating bed
    M190 S{bedtemp}                                                              ; wait for bed temp
   
    G32                                                                          ; home all axes + QGL
    # BED_MESH_CALIBRATE
    
    # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp} ; wait for chamber temp

    M117 Heating hotend
    M109 S{hotendtemp}                                                           ; wait for hotend temp
    M117

    G28 Z

    status_calibrating_z
    CALIBRATE_Z
    
    status_cleaning
    WIPE_LINE

    status_printing
    M117

[gcode_macro TOOLHEAD_MAINTENANCE]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  M117 Maintenance...
  G90 ; absolute coordinates
  G1 X150 Y0 Z150 F7800 ; move
  UPDATE_DELAYED_GCODE ID=CLEAR_SCREEN DURATION=60


[gcode_macro WIPE_LINE]
gcode:
  {% set z = params.Z|default(0.25)|float %}
  {% set n = params.N|default(0.4)|float %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=WIPE_LINE_state
    M117 Wiping
    M82 ; absolute extrusion dist
    G90 ; absolute coordinates
    G92 E0 ; set position
    G1 X3 Y0 Z5 F7800 ; move
    G1 E2 F3000
    G1 X3 Y10 Z{z} F7000 ; move
    G1 X3 Y250 F1500 E41.5
    M117
    RESTORE_GCODE_STATE NAME=WIPE_LINE_state MOVE=0
  {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 36.136
#*# pid_ki = 1.353
#*# pid_kd = 241.210
#*#
#*# [stepper_z]
#*# position_endstop = 1.100
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.017500, 0.020000, 0.015000, 0.010000, 0.020000
#*# 	-0.032500, -0.017500, -0.027500, -0.040000, -0.017500
#*# 	-0.015000, 0.002500, 0.000000, -0.012500, 0.010000
#*# 	0.012500, 0.017500, 0.007500, 0.002500, 0.012500
#*# 	0.045000, 0.047500, 0.045000, 0.037500, 0.057500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.092
#*# pid_ki = 1.277
#*# pid_kd = 123.262
#*#
#*# [probe]
#*# z_offset = 9.250
